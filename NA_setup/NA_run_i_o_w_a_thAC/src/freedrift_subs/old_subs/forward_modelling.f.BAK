c------------------------------------------------------------------------
c
c	Subroutine forward_modelling - calculates the array "predicted_
c				       data" from the model "rmodel"
c
c	Note_1: Calls are made to : theo
c
c       Note_2: rmodel(1:nlayer): thickness
c               rmodel(nlayer+1:2*nlayer): velocity at upper interface
c               rmodel(2*nlayer+1:3*nlayer): velocity at lower interface
c               rmodel(3*nlayer+1:4*nlayer): Vp/Vs ratio
c
c-------------------------------------------------------------------------
c
	subroutine forward_modelling(
     &		rmodel, moddim, incident_angle, constant_a, 
     &		constant_c, time_shift, ndata, nwave, fs, 
     &          q_alpha, q_beta, predicted_data )
c
        include 'rfi_param.inc'
c
	parameter     ( v60 = 8.043 )
	parameter     ( rad = 0.017453292 )
c
	real*8		rmodel(maxmoddim)
c
	real*4		incident_angle(maxwave),
     &			constant_a(maxwave),
     &			constant_c(maxwave),
     &			time_shift(maxwave),
     &			predicted_data(maxdata,maxwave),
     &                  q_alpha(maxlayer),
     &                  q_beta(maxlayer)
c
	real*4          h(maxsublayer),
     &                  beta(maxsublayer),
     &                  vpvs(maxsublayer),
     &                  qa(maxsublayer),
     &                  qb(maxsublayer)
c
	integer		ndata(maxwave)
c
c------ construct a model for 'theo'
c
	nlayer=moddim/4
c
	k=0
	do i=1,nlayer
	  thick=rmodel(i)
	  if (thick.gt.0.0) then
	     v1=rmodel(nlayer+i)
	     v2=rmodel(2*nlayer+i)
	     gr=(v2-v1)/thick
	     nsub=int(thick/2.)+1
	     dh=thick/float(nsub)
	     do j=1,nsub
	       k=k+1
	       h(k)=dh
	       beta(k)=v1+gr*dh*real(j-1)
	       vpvs(k)=rmodel(3*nlayer+i)
	       qa(k)=q_alpha(i)
	       qb(k)=q_beta(i)
	     end do
	  end if
	end do
c
c       *** semi-infinite layer ***
c
	k=k+1
	h(k)=0.0
	beta(k)=beta(k-1)
	vpvs(k)=vpvs(k-1)
	qa(k)=qa(k-1)
	qb(k)=qb(k-1)
c
	ntot=k
c
c	do i=1,ntot
c	  write(6,'(i3,5f10.3)') i,h(i),beta(i),vpvs(i),qa(i),qb(i)
c	end do
c
c------ compute synthetic receiver functions
c
	do iw=1,nwave
c
c       *** correction of incident angle ***
c
	  ppara=sin(incident_angle(iw)*rad)/v60
	  din=asin(ppara*beta(ntot)*vpvs(ntot))/rad
c
	  call theo(
     &          ntot, beta, h, vpvs, qa, qb, fs, din, 
     &		constant_a(iw), constant_c(iw), time_shift(iw), 
     &		ndata(iw), predicted_data(1,iw) )
c
c	  write(6,*) 'predicted_data(71:80)'
c	  write(6,*) (predicted_data(i,iw),i=71,80)
c
	end do
c
	return
	end
